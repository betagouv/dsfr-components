---
title: Utilisation
---

markdown:
  Vous pouvez utiliser les composants dans vos templates Rails en :

  * appelant <code>render</code> avec un objet ViewComponent ;
  * utilisant les helpers fournis

  Le résultat est le même peu importe la méthode utilisée.

  ## Capture du contenu

  Cette librairie utilise les fonctionnalités par défaut de Rails pour capturer du contenu.
  Cela doit marcher avec les chaînes de caractères mais [ne rien afficher]((https://github.com/rails/rails/issues/17661)) quand d'autres objets sont passés en arguments.
  Par exemple si on capture un nombre décimal et une chaîne de caractères dans un bloc `tag#span`, seule la chaîne de caractères est affichée :

.code-sample
  pre
    code.highlight.language-slim
      |
        = tag.span { 1.0 }
        = tag.span { "2.0" }

  pre
    code.highlight.language-html
        = "<span></span>\n"
        = "<span>2.0</span>"

markdown:
  ## Utilisation directe des objets ViewComponent

.code-sample
  pre
    code.highlight.language-slim
      | = render(DsfrComponent::AlertComponent.new(title: "Message important"))

markdown:
  ## Utilisation des helpers

  Les helpers sont plus simples à utiliser et fournissent une expérience harmonisée avec les helpers de liens.

.code-sample
  pre
    code.highlight.language-slim
      | = dsfr_alert(title: "Message important", size: :sm)

h2 Correspondance entre les noms de composants et les helpers
.fr-table
  table
    thead
      tr
        th Composant
        th Helper
    tbody
      - component_helper_mapping.each do |class_name, helper_method|
        tr
          td
            code #{class_name}
          td
            code #{helper_method}
